ext.restletVersion="2.2.1"
apply plugin: "idea"
apply plugin: "maven"
buildscript {
     repositories {
        if (target == 'development' ) {
            mavenLocal()
        }
	maven {
            url "https://plugins.gradle.org/m2/"
        }
 	maven {
	    url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
    }
    dependencies {
        //classpath "org.sonarqube.gradle:gradle-sonarqube-plugin:1.1"
        //classpath 'be.jlr-home.gradle:scrPlugin:0.1.3'
    }
}

subprojects {
    buildscript {
        repositories {
            if (target == 'development' ) {
                mavenLocal()
            }
            maven {
                url "http://maven.aliyun.com/nexus/content/groups/public/"
            }
        }
      
    }
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'
    //apply plugin: 'osgi'
    //apply plugin: 'scr'
    //apply plugin: 'org.sonarqube'
    //apply plugin: 'jacoco'


    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar 
        //archives testJar
    }

    repositories {
	if ( target == 'development' ) {
            mavenLocal()
        }
        maven {
                url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
    }

    install {
        repositories.mavenInstaller {
            pom.version=project.cubeVersion
        }
    }
    uploadArchives {
        repositories.mavenDeployer {
                pom.artifactId = project.name
                pom.version = project.cubeVersion
                pom.packaging = 'jar'
            }
    }

    def installer = install.repositories.mavenInstaller
    def deployer = uploadArchives.repositories.mavenDeployer
    [installer, deployer]*.pom*.whenConfigured { pom -> 
        pom.dependencies.each{dep-> 
            if (dep.groupId == 'com.cubeGo' && dep.version == "unspecified" ) {
                dep.version=pom.version
            }
        }
    }
}
